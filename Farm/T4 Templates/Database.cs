// This file was automatically generated by the PetaPoco T4 Template
// Do not make changes directly to this file - edit the template instead
// 
// The following connection settings were used to generate this file
// 
//     Connection String Name: `Sys`
//     Provider:               `System.Data.SqlClient`
//     Connection String:      `server=.;uid=sa;pwd=localhost;database=HSTFarm.Sys`
//     Schema:                 ``
//     Include Views:          `False`



using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using PetaPoco;

namespace Hst.Models
{

	public partial class PPUtils : Database
	{
		public PPUtils() 
			: base("Sys")
		{
			CommonConstruct();
		}

		public PPUtils(string connectionStringName) 
			: base(connectionStringName)
		{
			CommonConstruct();
		}
		
		partial void CommonConstruct();
		
		public interface IFactory
		{
			PPUtils GetInstance();
		}
		
		public static IFactory Factory { get; set; }
        public static PPUtils GetInstance()
        {
			if (_instance!=null)
				return _instance;
				
			if (Factory!=null)
				return Factory.GetInstance();
			else
				return new PPUtils();
        }

		[ThreadStatic] static PPUtils _instance;
		
		public override void OnBeginTransaction()
		{
			if (_instance==null)
				_instance=this;
		}
		
		public override void OnEndTransaction()
		{
			if (_instance==this)
				_instance=null;
		}
        

		public class Record<T> where T:new()
		{
			public static PPUtils repo { get { return PPUtils.GetInstance(); } }
			public bool IsNew() { return repo.IsNew(this); }
			public object Insert() { return repo.Insert(this); }

			public void Save() { repo.Save(this); }
			public int Update() { return repo.Update(this); }

			public int Update(IEnumerable<string> columns) { return repo.Update(this, columns); }
			public static int Update(string sql, params object[] args) { return repo.Update<T>(sql, args); }
			public static int Update(Sql sql) { return repo.Update<T>(sql); }
			public int Delete() { return repo.Delete(this); }
			public static int Delete(string sql, params object[] args) { return repo.Delete<T>(sql, args); }
			public static int Delete(Sql sql) { return repo.Delete<T>(sql); }
			public static int Delete(object primaryKey) { return repo.Delete<T>(primaryKey); }
			public static bool Exists(object primaryKey) { return repo.Exists<T>(primaryKey); }
			public static bool Exists(string sql, params object[] args) { return repo.Exists<T>(sql, args); }
			public static T SingleOrDefault(object primaryKey) { return repo.SingleOrDefault<T>(primaryKey); }
			public static T SingleOrDefault(string sql, params object[] args) { return repo.SingleOrDefault<T>(sql, args); }
			public static T SingleOrDefault(Sql sql) { return repo.SingleOrDefault<T>(sql); }
			public static T FirstOrDefault(string sql, params object[] args) { return repo.FirstOrDefault<T>(sql, args); }
			public static T FirstOrDefault(Sql sql) { return repo.FirstOrDefault<T>(sql); }
			public static T Single(object primaryKey) { return repo.Single<T>(primaryKey); }
			public static T Single(string sql, params object[] args) { return repo.Single<T>(sql, args); }
			public static T Single(Sql sql) { return repo.Single<T>(sql); }
			public static T First(string sql, params object[] args) { return repo.First<T>(sql, args); }
			public static T First(Sql sql) { return repo.First<T>(sql); }
			public static List<T> Fetch(string sql, params object[] args) { return repo.Fetch<T>(sql, args); }
			public static List<T> Fetch(Sql sql) { return repo.Fetch<T>(sql); }
			public static List<T> Fetch(long page, long itemsPerPage, string sql, params object[] args) { return repo.Fetch<T>(page, itemsPerPage, sql, args); }
			public static List<T> Fetch(long page, long itemsPerPage, Sql sql) { return repo.Fetch<T>(page, itemsPerPage, sql); }
			public static List<T> SkipTake(long skip, long take, string sql, params object[] args) { return repo.SkipTake<T>(skip, take, sql, args); }
			public static List<T> SkipTake(long skip, long take, Sql sql) { return repo.SkipTake<T>(skip, take, sql); }
			public static Page<T> Page(long page, long itemsPerPage, string sql, params object[] args) { return repo.Page<T>(page, itemsPerPage, sql, args); }
			public static Page<T> Page(long page, long itemsPerPage, Sql sql) { return repo.Page<T>(page, itemsPerPage, sql); }
			public static IEnumerable<T> Query(string sql, params object[] args) { return repo.Query<T>(sql, args); }
			public static IEnumerable<T> Query(Sql sql) { return repo.Query<T>(sql); }

		}

	}
	



    

	[TableName("dbo.biz_checkItem")]



	[PrimaryKey("ChkItemCode", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class biz_checkItem : PPUtils.Record<biz_checkItem>  
    {



		[Column] public long ChkItemId { get; set; }





		[Column] public string ChkItemCode { get; set; }





		[Column] public string ChkItem { get; set; }





		[Column] public double? ItemPoints { get; set; }





		[Column] public string ParentItemCode { get; set; }





		[Column] public string StdItemCode { get; set; }





		[Column] public string Line { get; set; }





		[Column] public int? SortNo { get; set; }





		[Column] public short IsEnable { get; set; }





		[Column] public short? IsDel { get; set; }





		[Column] public DateTime CreateDate { get; set; }





		[Column] public string UpdatePerson { get; set; }





		[Column] public DateTime UpdateDate { get; set; }





		[Column] public string CreatePerson { get; set; }



	}

    

	[TableName("dbo.biz_checkList")]



	[PrimaryKey("ChkListId")]




	[ExplicitColumns]

    public partial class biz_checkList : PPUtils.Record<biz_checkList>  
    {



		[Column] public long ChkListId { get; set; }





		[Column] public string ChkListNo { get; set; }





		[Column] public string ChkListDesc { get; set; }





		[Column] public string OrganizeCode { get; set; }





		[Column] public string OrganizeName { get; set; }





		[Column] public DateTime CheckDate { get; set; }





		[Column] public string Checker { get; set; }





		[Column] public string CheckerCode { get; set; }





		[Column] public string OrgHead { get; set; }





		[Column] public string HostName { get; set; }





		[Column] public string CheckerOrgCode { get; set; }





		[Column] public string GRemark { get; set; }





		[Column] public string Line { get; set; }





		[Column] public string SortNo { get; set; }





		[Column] public short? IsEnable { get; set; }





		[Column] public short? IsDel { get; set; }





		[Column] public DateTime? CreateDate { get; set; }





		[Column] public string UpdatePerson { get; set; }





		[Column] public DateTime? UpdateDate { get; set; }





		[Column] public string CreatePerson { get; set; }



	}

    

	[TableName("dbo.biz_checkListDtl")]



	[PrimaryKey("ChkListDtlId")]




	[ExplicitColumns]

    public partial class biz_checkListDtl : PPUtils.Record<biz_checkListDtl>  
    {



		[Column] public long ChkListDtlId { get; set; }





		[Column] public long? ChkListId { get; set; }





		[Column] public string ItemCode { get; set; }





		[Column] public string StdItemCode { get; set; }





		[Column] public string ChkItem { get; set; }





		[Column] public double ItemPoints { get; set; }





		[Column] public string ChkResult { get; set; }





		[Column] public double ChkScore { get; set; }





		[Column] public string ChkListNo { get; set; }





		[Column] public DateTime? CheckDate { get; set; }





		[Column] public string CheckerRemark { get; set; }





		[Column] public string ProblemPic { get; set; }





		[Column] public DateTime? CorrectDdLine { get; set; }





		[Column] public string SortNo { get; set; }





		[Column] public string Importance { get; set; }





		[Column] public short IsEnable { get; set; }





		[Column] public short IsDel { get; set; }





		[Column] public DateTime? CreateDate { get; set; }





		[Column] public string UpdatePerson { get; set; }





		[Column] public DateTime? UpdateDate { get; set; }





		[Column] public string CreatePerson { get; set; }



	}

    

	[TableName("dbo.biz_chkListFb")]



	[PrimaryKey("ChkListDtlId", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class biz_chkListFb : PPUtils.Record<biz_chkListFb>  
    {



		[Column] public long ChkListFbId { get; set; }





		[Column] public long ChkListDtlId { get; set; }





		[Column] public DateTime? CorrectFinishedDate { get; set; }





		[Column] public string CorrectPic { get; set; }





		[Column] public string Feedback { get; set; }





		[Column] public short IsEnable { get; set; }





		[Column] public short IsDel { get; set; }





		[Column] public DateTime? CreateDate { get; set; }





		[Column] public string UpdatePerson { get; set; }





		[Column] public DateTime? UpdateDate { get; set; }





		[Column] public string CreatePerson { get; set; }





		[Column] public string SortNo { get; set; }



	}

    

	[TableName("dbo.sys_action")]




	[ExplicitColumns]

    public partial class sys_action : PPUtils.Record<sys_action>  
    {



		[Column] public long ActionId { get; set; }





		[Column] public string ActionCode { get; set; }





		[Column] public string TableName { get; set; }





		[Column] public string MIdField { get; set; }





		[Column] public string SqlFrag { get; set; }





		[Column] public short IsEnable { get; set; }





		[Column] public short IsDel { get; set; }





		[Column] public DateTime? CreateDate { get; set; }





		[Column] public string UpdatePerson { get; set; }





		[Column] public DateTime? UpdateDate { get; set; }





		[Column] public string CreatePerson { get; set; }



	}

    

	[TableName("dbo.sys_log")]



	[PrimaryKey("ID")]




	[ExplicitColumns]

    public partial class sys_log : PPUtils.Record<sys_log>  
    {



		[Column] public int ID { get; set; }





		[Column] public string UserCode { get; set; }





		[Column] public string UserName { get; set; }





		[Column] public string Position { get; set; }





		[Column] public string Target { get; set; }





		[Column] public string Type { get; set; }





		[Column] public string Message { get; set; }





		[Column] public DateTime? Date { get; set; }



	}

    

	[TableName("dbo.sys_menu")]



	[PrimaryKey("MenuCode", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class sys_menu : PPUtils.Record<sys_menu>  
    {



		[Column] public long MenuId { get; set; }





		[Column] public string MenuCode { get; set; }





		[Column] public string ParentCode { get; set; }





		[Column] public string MenuName { get; set; }





		[Column] public string URL { get; set; }





		[Column] public string IconClass { get; set; }





		[Column] public string IconURL { get; set; }





		[Column] public string MenuSeq { get; set; }





		[Column] public string Description { get; set; }





		[Column] public short IsEnable { get; set; }





		[Column] public short? IsDel { get; set; }





		[Column] public string Line { get; set; }





		[Column] public string CreatePerson { get; set; }





		[Column] public DateTime? CreateDate { get; set; }





		[Column] public string UpdatePerson { get; set; }





		[Column] public DateTime? UpdateDate { get; set; }



	}

    

	[TableName("dbo.sys_model")]



	[PrimaryKey("Model", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class sys_model : PPUtils.Record<sys_model>  
    {



		[Column] public long ModelId { get; set; }





		[Column] public string ModelCode { get; set; }





		[Column] public string Model { get; set; }





		[Column] public string SortNo { get; set; }





		[Column] public string Line { get; set; }





		[Column] public short IsEnable { get; set; }





		[Column] public short? IsDel { get; set; }





		[Column] public DateTime? CreateDate { get; set; }





		[Column] public string UpdatePerson { get; set; }





		[Column] public DateTime? UpdateDate { get; set; }





		[Column] public string CreatePerson { get; set; }



	}

    

	[TableName("dbo.sys_organize")]



	[PrimaryKey("OrganizeCode", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class sys_organize : PPUtils.Record<sys_organize>  
    {



		[Column] public long OrganizeId { get; set; }





		[Column] public string OrganizeCode { get; set; }





		[Column] public string OrganizeName { get; set; }





		[Column] public string ParentCode { get; set; }





		[Column] public string Description { get; set; }





		[Column] public byte? IsUnit { get; set; }





		[Column] public byte IsDel { get; set; }





		[Column] public byte? IsEnable { get; set; }





		[Column] public string SortNo { get; set; }





		[Column] public string CreatePerson { get; set; }





		[Column] public DateTime? CreateDate { get; set; }





		[Column] public string UpdatePerson { get; set; }





		[Column] public DateTime? UpdateDate { get; set; }



	}

    

	[TableName("dbo.sys_position")]



	[PrimaryKey("PositionCode", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class sys_position : PPUtils.Record<sys_position>  
    {



		[Column] public int PositionId { get; set; }





		[Column] public string PositionCode { get; set; }





		[Column] public string Position { get; set; }





		[Column] public short? IsDel { get; set; }





		[Column] public short? IsEnable { get; set; }





		[Column] public string CreatePerson { get; set; }





		[Column] public DateTime? CreateDate { get; set; }





		[Column] public string UpdatePerson { get; set; }





		[Column] public DateTime? UpdateDate { get; set; }



	}

    

	[TableName("dbo.sys_role")]



	[PrimaryKey("RoleName", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class sys_role : PPUtils.Record<sys_role>  
    {



		[Column] public long RoleId { get; set; }





		[Column] public string RoleCode { get; set; }





		[Column] public string RoleName { get; set; }





		[Column] public string Description { get; set; }





		[Column] public string LineLimit { get; set; }





		[Column] public string Line { get; set; }





		[Column] public short IsEnable { get; set; }





		[Column] public short IsDel { get; set; }





		[Column] public string RoleSeq { get; set; }





		[Column] public string CreatePerson { get; set; }





		[Column] public DateTime? CreateDate { get; set; }





		[Column] public string UpdatePerson { get; set; }





		[Column] public DateTime? UpdateDate { get; set; }



	}

    

	[TableName("dbo.sys_role_menu")]



	[PrimaryKey("RMId")]




	[ExplicitColumns]

    public partial class sys_role_menu : PPUtils.Record<sys_role_menu>  
    {



		[Column] public long RMId { get; set; }





		[Column] public long RoleId { get; set; }





		[Column] public string RoleName { get; set; }





		[Column] public int MenuId { get; set; }





		[Column] public string MenuName { get; set; }





		[Column] public string Line { get; set; }





		[Column] public short IsEnable { get; set; }





		[Column] public short IsDel { get; set; }





		[Column] public string CreatePerson { get; set; }





		[Column] public DateTime? CreateDate { get; set; }





		[Column] public string UpdatePerson { get; set; }





		[Column] public DateTime? UpdateDate { get; set; }



	}

    

	[TableName("dbo.sys_user")]



	[PrimaryKey("UserCode", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class sys_user : PPUtils.Record<sys_user>  
    {



		[Column] public long UserId { get; set; }





		[Column] public string UserCode { get; set; }





		[Column] public string Line { get; set; }





		[Column] public string UserName { get; set; }





		[Column] public string Description { get; set; }





		[Column] public string Password { get; set; }





		[Column] public string PositionName { get; set; }





		[Column] public string OrganizeCode { get; set; }





		[Column] public string OrganizeName { get; set; }





		[Column] public string ConfigJSON { get; set; }





		[Column] public int? LoginCount { get; set; }





		[Column] public DateTime? LastLoginDate { get; set; }





		[Column] public string UserSeq { get; set; }





		[Column] public short? IsDel { get; set; }





		[Column] public short? IsEnable { get; set; }





		[Column] public string CreatePerson { get; set; }





		[Column] public DateTime? CreateDate { get; set; }





		[Column] public string UpdatePerson { get; set; }





		[Column] public DateTime? UpdateDate { get; set; }



	}


}
